name: 🔄 CI Pipeline

on:
  push:
    branches: [github-actions]
  pull_request:
    branches: [github-actions]

env:
  NODE_VERSION: '20'

jobs:
  check-merge-conflicts:
    name: 🚫 Check Merge Conflicts
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          fetch-depth: 0

      - name: 🔀 Try merging with base branch
        run: |
          git fetch origin ${{ github.base_ref }}
          git checkout -b temp-merge
          git merge origin/${{ github.base_ref }} --no-commit --no-ff || {
            echo "❌ Merge conflict detected!"
            exit 1
          }
          echo "✅ No merge conflicts."

  test-build:
    name: 🧪 Test & Build
    runs-on: ubuntu-latest
    needs: check-merge-conflicts

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: company_db
          MYSQL_USER: company
          MYSQL_PASSWORD: Ukshati@123
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: 📦 Install Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: 🔍 Linting and Code Quality Check
        working-directory: ./frontend
        run: |
          echo "🔍 Running ESLint..."
          npm run lint:ci
          echo "✅ ESLint check completed."

      - name: 🧪 Run Unit Tests
        working-directory: ./frontend
        run: npm run test:unit

      - name: 🧪 Run Integration Tests
        working-directory: ./frontend
        run: npm run test:integration

      - name: 🛠️ Check Unused Dependencies
        working-directory: ./frontend
        run: |
          echo "🔎 Checking for unused dependencies..."
          npx depcheck || echo "⚠️ Depcheck finished with warnings or unused dependencies."

      - name: 🏗️ Build Application
        working-directory: ./frontend
        run: npm run build

      - name: 📤 Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

      - name: 🔐 Security Scan
        working-directory: ./frontend
        run: |
          echo "🔒 Running npm audit..."
          npm audit --audit-level=critical || echo "⚠️ Non-critical vulnerabilities found."
